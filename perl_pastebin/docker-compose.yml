services:

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pastebin

  pastebin:
    build: .
    ports:
      - "3000:3000"
    environment:
      - COUCHDB_URL=http://admin:password@couchdb:5984
    # ИЗМЕНЕНИЕ: Указываем, что pastebin должен дождаться, пока couchdb
    # не станет "healthy" (здоровым).
    depends_on:
      couchdb:
        condition: service_healthy

  couchdb:
    image: couchdb:3
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    volumes:
      - couchdb_data:/opt/couchdb/data
    # НОВАЯ СЕКЦИЯ: HEALTHCHECK
    # Docker будет периодически выполнять эту команду, чтобы проверить, "здоров" ли сервис.
    healthcheck:
      # Проверяем, что сервер CouchDB отвечает на базовый запрос.
      test: ["CMD", "curl", "-f", "http://localhost:5984"]
      interval: 5s
      timeout: 2s
      retries: 10

  couchdb-exporter:
    # ИЗМЕНЕНИЕ 1: Используем правильное имя образа
    image: gesellix/couchdb-prometheus-exporter
    ports:
      - "9984:9984"
    # ИЗМЕНЕНИЕ 2: Используем 'command' для явной передачи параметров
    command:
      # Параметр для подключения к вашей БД
      - '--couchdb.uri=http://admin:password@couchdb:5984'
      # Эта полезная опция заставит экспортер собирать метрики по ВСЕМ базам данных,
      # включая вашу 'pastes', без необходимости указывать их имена вручную.
      - '--databases=_all_dbs'
    depends_on:
      - couchdb
      
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - pastebin

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3100:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/config/
      - ./secrets/telegram_bot_token:/etc/alertmanager/secrets/telegram_bot_token:ro
    command:
      - '--config.file=/config/config.yml'
    depends_on:
      - prometheus

  swagger-ui:
    # Используем официальный, готовый образ
    image: swaggerapi/swagger-ui:latest
    ports:
      # Открываем новый порт 8081 для доступа к Swagger UI
      - "8081:8080"
    environment:
      # --- ВОТ МАГИЯ ---
      # Этой переменной мы говорим контейнеру, откуда загружать спецификацию.
      # Он запросит ее у нашего сервиса pastebin по его внутреннему Docker-имени.
      - URL=http://localhost:3000/openapi.json
    depends_on:
      - pastebin

volumes:
  prometheus_data: {}
  grafana_data: {}
  couchdb_data: {}
