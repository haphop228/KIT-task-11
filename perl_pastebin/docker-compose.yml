services:

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pastebin

  pastebin:
      build: .
      ports:
        - "3000:3000"
      environment:
        - COUCHDB_URL=http://admin:password@couchdb:5984
      depends_on:
        couchdb:
          condition: service_healthy
      # --- НОВАЯ СЕКЦИЯ ---
      healthcheck:
        # Проверяем, что сервис не просто жив, а готов принимать трафик
        test: ["CMD", "curl", "-f", "http://localhost:3000/"]
        interval: 5s
        timeout: 2s
        retries: 10

  couchdb:
    image: couchdb:3
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    volumes:
      - couchdb_data:/opt/couchdb/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984"]
      interval: 5s
      timeout: 2s
      retries: 10

  couchdb-exporter:
    image: gesellix/couchdb-prometheus-exporter
    ports:
      - "9984:9984"
    command:
      - '--couchdb.uri=http://admin:password@couchdb:5984'
      - '--databases=_all_dbs'
    depends_on:
      - couchdb
      
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - pastebin

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3100:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/config/
      - ./secrets/telegram_bot_token:/etc/alertmanager/secrets/telegram_bot_token:ro
    command:
      - '--config.file=/config/config.yml'
    depends_on:
      - prometheus

  swagger-ui:
      image: swaggerapi/swagger-ui:latest
      ports:
        - "8081:8080"
      environment:
        # --- ИСПРАВЛЕНИЕ 1: Используем имя сервиса, а не localhost ---
        - URL=http://localhost:8080/openapi.json
      depends_on:
        pastebin:
          # --- ИСПРАВЛЕНИЕ 2: Ждем, пока pastebin не станет 'healthy' ---
          condition: service_healthy

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  prometheus_data: {}
  grafana_data: {}
  couchdb_data: {}